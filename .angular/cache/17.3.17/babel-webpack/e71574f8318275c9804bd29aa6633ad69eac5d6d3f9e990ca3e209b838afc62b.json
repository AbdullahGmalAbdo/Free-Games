{"ast":null,"code":"import { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nexport const authInterceptor = (req, next) => {\n  const authService = inject(AuthService);\n  const token = authService.getToken();\n  if (token && !req.url.includes('free-to-play-games-database')) {\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${token}`)\n    });\n    return next(authReq);\n  }\n  return next(req);\n};","map":{"version":3,"names":["inject","AuthService","authInterceptor","req","next","authService","token","getToken","url","includes","authReq","clone","headers","set"],"sources":["/home/project/src/app/core/interceptors/auth.interceptor.ts"],"sourcesContent":["import { HttpInterceptorFn } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\nexport const authInterceptor: HttpInterceptorFn = (req, next) => {\n  const authService = inject(AuthService);\n  const token = authService.getToken();\n\n  if (token && !req.url.includes('free-to-play-games-database')) {\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${token}`)\n    });\n    return next(authReq);\n  }\n\n  return next(req);\n};"],"mappings":"AACA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,eAAe,GAAsBA,CAACC,GAAG,EAAEC,IAAI,KAAI;EAC9D,MAAMC,WAAW,GAAGL,MAAM,CAACC,WAAW,CAAC;EACvC,MAAMK,KAAK,GAAGD,WAAW,CAACE,QAAQ,EAAE;EAEpC,IAAID,KAAK,IAAI,CAACH,GAAG,CAACK,GAAG,CAACC,QAAQ,CAAC,6BAA6B,CAAC,EAAE;IAC7D,MAAMC,OAAO,GAAGP,GAAG,CAACQ,KAAK,CAAC;MACxBC,OAAO,EAAET,GAAG,CAACS,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUP,KAAK,EAAE;KAC5D,CAAC;IACF,OAAOF,IAAI,CAACM,OAAO,CAAC;;EAGtB,OAAON,IAAI,CAACD,GAAG,CAAC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}